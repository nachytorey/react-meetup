{"version":3,"sources":["app/constants/actions.js","app/actions/api.js","app/actions/toast.js","app/actions/ui.js","app/selectors/weather.js","app/selectors/cities.js","app/selectors/location.js","app/component/WeatherCard.js","app/actions/weather.js","app/actions/cities.js","app/actions/location.js","app/selectors/ui.js","app/constants/ui.js","app/component/ProfileMenu.js","app/component/NavBar.js","app/component/BlockScreen.js","app/component/MainBaody.js","App.js","app/reducers/cities.js","app/reducers/ui.js","app/reducers/toast.js","app/reducers/weather.js","app/reducers/location.js","app/reducers/root.js","app/middleware/index.js","app/middleware/core/multi.js","app/middleware/core/api.js","app/store.js","theme.js","app/selectors/toast.js","app/component/Toaster/index.js","index.js"],"names":["name","makeAsyncActionTypes","type","REQUEST","PENDING","SUCCESS","ERROR","API","GET_WEATHER","GET_CURRENT_LOCATION","FETCH_CITIES","ADD_WEATHER","DELETE_WEATHER","CLEAR_WEATHER","CHANGE_THEME","UI","TOAST","WEATHER_CARD_COMPONENT","MOUNTED","RENDERED","UMOUNTED","makeComponentActionTypes","api","url","pending","success","error","meta","payload","method","createToast","message","timeout","unBlockUI","getWeather","state","weather","getWeatherSlice","getCities","cities","getCitiesSlice","byId","getCurrentLocation","location","getCurrentLocationSlice","mapDispatchToProps","addWeather","city","abort","undefined","lat","console","log","lon","deleteWeather","clearWeather","mounted","connect","classes","makeStyles","theme","formControl","margin","spacing","minWidth","card","maxWidth","selectEmpty","marginTop","select","width","grid","button","useStyles","useEffect","React","useState","selectedCities","setSelectedCities","setError","moment","require","Container","Autocomplete","multiple","id","value","options","disableCloseOnSelect","getOptionLabel","option","renderOption","selected","Fragment","Checkbox","style","marginRight","checked","onChange","_","newValue","length","renderInput","params","TextField","helperText","variant","label","placeholder","Button","onClick","map","color","className","Grid","container","w","item","xs","sm","md","xl","Card","CardActionArea","CardContent","Typography","gutterBottom","component","align","format","Math","trunc","daily","temp","day","add","CardActions","size","handleDeleteWeather","cityId","getUiSlice","ui","getUiSpinner","requests","getTheme","getIsUiBlocked","blocking","THEME","changeTheme","ListItem","Switch","target","root","flexGrow","menuButton","marginBottom","spinner","AppBar","position","Toolbar","backdrop","zIndex","BlockScreen","isBlocked","Backdrop","open","CircularProgress","padding","children","initialState","isFetching","action","_id","messages","toastsReducer","filter","m","lastUpdatedTime","Date","now","newById","index","findIndex","e","push","weatherId","weathers","current","rootReducer","combineReducers","citiesReducer","weatherReducer","toast","locationReducer","next","err","dispatch","Array","isArray","forEach","i","data","actions","headers","body","JSON","stringify","fetch","then","response","json","time","catch","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","middleware","themeGenerator","createMuiTheme","palette","primary","blue","overrides","MuiCssBaseline","p","textTransform","getToastsSlice","getToastMessage","msgs","deleteToast","isOpen","setIsOpen","Snackbar","onClose","anchorOrigin","vertical","horizontal","autoHideDuration","onExited","ThemedApp","generatedTheme","ThemeProvider","CssBaseline","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.6bd8731d.chunk.js","sourcesContent":["const makeAsyncActionTypes = (type) => ({\n  REQUEST: `${type}`,\n  PENDING: `${type}_PENDING`,\n  SUCCESS: `${type}_SUCCESS`,\n  ERROR: `${type}_ERROR`,\n});\n\nconst makeOpenClose = (name) => ({\n  OPEN: `${name}_OPENED`,\n  CLOSE: `${name}_CLOSED`,\n});\n\nconst makeComponentActionTypes = (name) => ({\n  MOUNTED: `${name}_MOUNTED`,\n  RENDERED: `${name}_RENDERED`,\n  UMOUNTED: `${name}_UMOUNTED`,\n});\n\nexport const API = {\n  START: \"API_START\", DONE: \"API_DONE\", ERROR: \"API_ERROR\",\n};\nexport const GET_WEATHER_CITY = makeAsyncActionTypes(\"GET_WEATHER_CITY\");\nexport const GET_WEATHER = makeAsyncActionTypes(\"GET_WEATHER\");\nexport const GET_CURRENT_LOCATION = makeAsyncActionTypes(\"ADD_CURRENT_LOCATION_CITY\");\n\nexport const ADD_CITY = \"ADD_CITY\";\nexport const DELETE_CITY = \"DELETE_CITY\";\nexport const FETCH_CITIES = \"FETCH_CITIES\";\n\nexport const ADD_WEATHER = \"ADD_WEATHER\";\nexport const DELETE_WEATHER = \"DELETE_WEATHER\";\nexport const CLEAR_WEATHER = \"CLEAR_WEATHER\";\nexport const ADD_CURRENT_WEATHER = \"ADD_CURRENT_WEATHER\";\n\n\nexport const CHANGE_THEME = \"CHANGE_THEME\";\nexport const SPLIT_POPUP = makeOpenClose(\"SPLIT_POPUP\");\nexport const UI = {\n  BLOCK: \"BLOCK_UI\", UNBLOCK: \"UNBLOCK_UI\",\n};\nexport const TOAST = {\n  CREATE: \"CREATE_TOAST\",\n  DELETE: \"DELETE_TOAST\",\n};\n\nexport const WEATHER_CARD_COMPONENT = makeComponentActionTypes(\"WEATHER_CARD_COMPONENT\");","import { API } from '../constants/actions';\n\nexport const api = {\n    get: (url, pending, success, error, meta = {}) =>\n        ({ type: API.START, payload: { url, method: \"GET\", pending, success, error }, meta: { api: meta } }),\n    post: (url, data, pending, success, error, meta = {}) =>\n        ({ type: API.START, payload: { url, method: \"POST\", data, pending, success, error }, meta: { api: meta } }),\n    put: (url, data, pending, success, error, meta = {}) =>\n        ({ type: API.START, payload: { url, method: \"PUT\", data, pending, success, error }, meta: { api: meta } }),\n    delete: (url, data, pending, success, error, meta = {}) =>\n        ({ type: API.START, payload: { url, method: \"DELETE\", data, pending, success, error }, meta: { api: meta } })\n};","import { TOAST } from '../constants/actions';\n\nexport const createToast = (message) => {\n    return {\n        type: TOAST.CREATE,\n        payload: {\n            message: message,\n            timeout: 2000,\n            type: \"warning\"\n        }\n    }\n};\n\nexport const deleteToast = id => ({\n    type: TOAST.DELETE,\n    payload: id\n});","import { CHANGE_THEME, SPLIT_POPUP, UI } from '../constants/actions';\n\nexport const changeTheme = (theme) => ({\n  type: CHANGE_THEME,\n  payload: { theme },\n});\n\nexport const splitPopUp = {\n  open: () => ({ type: SPLIT_POPUP.OPEN }),\n  close: () => ({ type: SPLIT_POPUP.CLOSE }),\n};\n\nexport const blockUI = () => ({\n  type: UI.BLOCK,\n});\n\nexport const unBlockUI = () => ({\n  type: UI.UNBLOCK,\n});\n","\nimport { createSelector } from \"reselect\";\n\nconst getWeatherSlice = state => state.weather;\nexport const getWeather = state => getWeatherSlice(state);","import { createSelector } from \"reselect\";\n\nconst getCitiesSlice = state => state.cities;\nexport const getCities = state => getCitiesSlice(state).byId;\nexport const getWeatherCities = state => getCities(state).filter(city => city?.weather != undefined);","import { createSelector } from \"reselect\";\n\nconst getCurrentLocationSlice = state => state.location;\nexport const getCurrentLocation = state => getCurrentLocationSlice(state);","import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { monent } from 'moment';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n//actions\nimport {\n    addWeather,\n    addCurrentWeather,\n    clearWeather,\n    deleteWeather,\n    mountedWeatherCardComponent as mounted\n} from '../actions/weather';\n\n//selectors\nimport { getWeather } from '../selectors/weather';\nimport { getCities } from '../selectors/cities';\nimport { getCurrentLocation } from '../selectors/location';\n\nconst WeatherCard = ({\n    mounted,\n    cities,\n    weather,\n    location,\n    addWeather,\n    deleteWeather,\n    clearWeather,\n    //  getCurrentLocation\n}) => {\n\n    const useStyles = makeStyles((theme) => ({\n        formControl: {\n            margin: theme.spacing(2),\n            minWidth: 200,\n        },\n        card: {\n            maxWidth: 600\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n        select: {\n            width: 200\n        },\n        grid: {\n        },\n        button: {\n            margin: theme.spacing(1),\n        }\n    }));\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        // const mimoment = moment();\n        // //moment(\"20201211\", \"YYYYMMDD\").fromNow()\n        // console.log(\"moment()\", moment().format(\"DD\"))\n        // console.log(\"moment()day\", moment().add(1, 'day').format(\"DD\"))\n\n        // console.log(mimoment)\n        mounted();\n    }, [weather]);\n\n    const [selectedCities, setSelectedCities] = React.useState([]);\n    const [error, setError] = React.useState(\"\");\n\n    const handleOnChange = (value) => {\n        if (value.length < 1)\n            setError(\"Seleccione al menos una ciudad\");\n        else if (value.length > 3)\n            setError(\"Solo puede seleccionar hasta 3 ciudades\");\n        else {\n            setError(\"\");\n        }\n        setSelectedCities(value)\n    };\n\n    const moment = require('moment');\n\n    const handleClearWeather = () => {\n        clearWeather();\n        setSelectedCities([]);\n        setError(\"\");\n    };\n\n    const handleOk = () => {\n        if (!error) {\n            clearWeather();\n\n            selectedCities.map(city => addWeather(city));\n\n            // const {\n            //     city,\n            //     country,\n            //     lat,\n            //     lon\n            // } = location;\n\n            // const currentCity = {\n            //     cityId: 0,\n            //     name: city,\n            //     lat,\n            //     lon\n            // }\n\n            // console.log(\"currentCity\", currentCity)\n            // addWeather(currentCity);\n\n        }\n    };\n\n    const handleDeleteWeather = (weather) => {\n        deleteWeather(weather)\n    };\n\n    return <Container>\n        <Autocomplete\n            multiple\n            id=\"checkboxes-tags\"\n            value={selectedCities}\n            options={cities}\n            disableCloseOnSelect\n            getOptionLabel={(option) => option.name}\n            renderOption={(option, { selected }) => (\n                <React.Fragment>\n                    <Checkbox\n                        style={{ marginRight: 8 }}\n                        checked={selected}\n                    />\n                    {option.name}\n                </React.Fragment>\n            )}\n            style={{}}\n            onChange={(_, newValue) => handleOnChange(newValue)}\n            renderInput={(params) => (\n                <TextField {...params}\n                    error={error ? true : false}\n                    helperText={error}\n                    variant=\"outlined\" label=\"Ciudades\" placeholder=\"\" />\n            )}\n        />\n        <Button onClick={handleOk} color=\"primary\" className={classes.button} variant=\"contained\">\n            Ver pronostico\n        </Button>\n        <Button color=\"primary\" onClick={handleClearWeather} variant=\"contained\">\n            Limpiar\n        </Button>\n        <Grid container spacing={2} className={classes.grid}>\n            {weather.byId.map(w =>\n                <Grid item xs={12} sm={4} md={4} xl={4} key={w?.cityId}>\n                    <Card className={classes.card} key={w?.cityId} variant=\"outlined\">\n                        <CardActionArea>\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                    {w?.name}\n                                </Typography>\n                                <Typography variant=\"subtitle2\"  >\n                                    Temperatura de los próximos 5 días\n                                    </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                    <Grid container spacing={1} className={classes.grid}>\n                                        <Grid item xs={4} sm={4} md={4} xl={4}>\n                                            <Typography variant=\"h6\" color=\"secondary\" align=\"center\">\n                                                {moment().format(\"DD MMM\")}\n                                            </Typography>\n                                            <Typography variant=\"subtitle2\" align=\"center\">\n                                                {Math.trunc(w?.daily[0].temp.day) + \"°\"}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={4} sm={4} md={4} xl={4}>\n                                            <Typography variant=\"h6\" color=\"secondary\" align=\"center\">\n                                                {moment().add(1, 'day').format(\"DD MMM\")}\n                                            </Typography>\n                                            <Typography variant=\"subtitle2\" align=\"center\">\n                                                {Math.trunc(w?.daily[1].temp.day) + \"°\"}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={4} sm={4} md={4} xl={4}>\n                                            <Typography variant=\"h6\" color=\"secondary\" align=\"center\">\n                                                {moment().add(2, 'day').format(\"DD MMM\")\n\n                                                }\n                                            </Typography>\n                                            <Typography variant=\"subtitle2\" align=\"center\">\n                                                {Math.trunc(w?.daily[2].temp.day) + \"°\"}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={4} sm={4} md={4} xl={4}>\n                                            <Typography variant=\"h6\" color=\"secondary\" align=\"center\">\n                                                {moment().add(3, 'day').format(\"DD MMM\")}\n                                            </Typography>\n                                            <Typography variant=\"subtitle2\" align=\"center\">\n                                                {Math.trunc(w?.daily[3].temp.day) + \"°\"}\n                                            </Typography>\n                                        </Grid>\n                                        <Grid item xs={4} sm={4} md={4} xl={4}>\n                                            <Typography variant=\"h6\" color=\"secondary\" align=\"center\">\n                                                {moment().add(4, 'day').format(\"DD MMM\")}\n                                            </Typography>\n                                            <Typography variant=\"subtitle2\" align=\"center\">\n                                                {Math.trunc(w?.daily[4].temp.day) + \"°\"}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                            <Button size=\"small\" color=\"primary\" onClick={() => handleDeleteWeather(w)}>\n                                Eliminar\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n            )}\n        </Grid>\n    </Container >\n};\n\nconst mapStateToProps = state => ({\n    cities: getCities(state),\n    weather: getWeather(state),\n    location: getCurrentLocation(state)\n});\n\nconst mapDispatchToProps = {\n    addWeather,\n    // getCurrentLocation,\n    deleteWeather,\n    clearWeather,\n    mounted\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherCard)","import { api } from './api'\nimport {\n    DELETE_WEATHER,\n    GET_WEATHER,\n    CLEAR_WEATHER,\n    WEATHER_CARD_COMPONENT,\n    ADD_CURRENT_WEATHER\n} from '../constants/actions';\nimport { createToast } from './toast';\nimport { blockUI, unBlockUI } from './ui';\nimport { fetchCities } from './cities';\nimport { getCurrentLocation } from './location';\n\nexport const addWeather = (city) => {\n    const abort = (city.lat === undefined) ? true : false;\n    console.log(\"city\",city)\n    console.log(\"abort\",abort)\n    if (!abort) {\n        return api.get(\n            `https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/onecall?lat=${city.lat}&lon=${city.lon}&exclude=current,minutely,hourly,alerts&units=metric&appid=de35df86f22d1843233d0c35a0de233b`,\n            [GET_WEATHER.PENDING, blockUI()],\n            [GET_WEATHER.SUCCESS, unBlockUI()],\n            [GET_WEATHER.ERROR, unBlockUI(), createToast(\"Error al consumir la API de clima\")],\n            city\n        )\n    } else {\n        return {\n            type: \"latitud undefined\", payload: null\n        }\n    }\n};\n\nexport const deleteWeather = (weather) => ({\n    type: DELETE_WEATHER,\n    payload: weather\n});\n\nexport const clearWeather = () => ({\n    type: CLEAR_WEATHER\n});\n\nexport const mountedWeatherCardComponent = () => {\n    return [\n        { type: WEATHER_CARD_COMPONENT.MOUNTED },\n        fetchCities(),\n        getCurrentLocation()\n    ]\n};\n","import { api } from '../actions/api'\nimport { GET_WEATHER_CITY, ADD_CITY, DELETE_CITY,ADD_CITY_COMPONENT } from '../constants/actions';\nimport cities from '../mocks/cities.json';\nimport { createToast } from './toast';\nimport { blockUI, unBlockUI } from './ui';\n\nexport const fetchCities = () => {\n    return { type: \"FETCH_CITIES\", payload: cities }\n};\n\n// export const addCity = (city) => [\n//     { type: ADD_CITY },\n//     getWeatherCity(city),\n// ];\n\n// export const getWeatherCity = (city) => api.get(\n//     `onecall?lat=${city.lat}&lon=${city.lng}&exclude=current,minutely,hourly,alerts&appid=de35df86f22d1843233d0c35a0de233b`,\n//     [GET_WEATHER_CITY.PENDING, blockUI()],\n//     [GET_WEATHER_CITY.SUCCESS, unBlockUI()],\n//     [GET_WEATHER_CITY.ERROR, unBlockUI(), createToast(\"API error\")],\n//     city\n// );\n\n// export const deleteCity = (city) => ({\n//     type: DELETE_CITY,\n//     payload: city\n// });\n\n// export const mountedAddCityComponent = () => {\n\n// }","import { api } from '../actions/api'\nimport { GET_CURRENT_LOCATION } from '../constants/actions';\nimport { createToast } from './toast';\n\nexport const getCurrentLocation = () => api.get(\n    `https://cors-anywhere.herokuapp.com/http://ip-api.com/json/`,\n    [GET_CURRENT_LOCATION.PENDING],\n    [GET_CURRENT_LOCATION.SUCCESS],\n    [GET_CURRENT_LOCATION.ERROR, createToast(\"Error al consumir la API de location\")]\n);\n\n","export const getUiSlice = (state) => state.ui;\nexport const getUiSpinner = (state) => getUiSlice(state).requests > 0;\nexport const getTheme = (state) => getUiSlice(state).theme;\nexport const getIsSplitPopUpOpen = (state) => getUiSlice(state).splitPopUp;\nexport const getIsUiBlocked = (state) => getUiSlice(state).blocking > 0;\n\n","export const THEME = {\n    LIGHT: \"light\",\n    DARK: \"dark\"\n};","import React, { useState } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport Switch from '@material-ui/core/Switch';\nimport { connect } from 'react-redux';\nimport { getTheme } from '../selectors/ui';\nimport { changeTheme } from '../actions/ui';\nimport { THEME } from '../constants/ui';\n\nconst ProfileMenu = ({ theme, changeTheme }) => {\n\n    const handleThemeChange = ({ target }) => {\n        const theme = target.checked ? THEME.DARK : THEME.LIGHT;\n        changeTheme(theme);\n    }\n\n    return (\n        <>\n            <ListItem>\n                <Switch\n                    color=\"secondary\"\n                    checked={theme === THEME.DARK}\n                    onChange={handleThemeChange}\n                />\n            </ListItem>\n        </>\n    );\n}\n\nconst mapStateToProps = state => ({\n    theme: getTheme(state)\n});\n\nconst mapDispatchToProps = {\n    changeTheme\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileMenu);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport ProfileMenu from './ProfileMenu';\nimport { CircularProgress, Fade } from '@material-ui/core';\nimport { getUiSpinner } from '../selectors/ui';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        marginBottom: theme.spacing(2)\n    }\n}));\n\nconst NavBar = ({ spinner }) => {\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <AppBar position=\"static\" className={classes.menuButton}>\n                <Toolbar>\n                    <Typography variant=\"h6\">\n                        Challenge\n                     </Typography>\n                    <ProfileMenu />\n                </Toolbar>\n            </AppBar>\n        </>\n    );\n}\n\nconst mapStateToProps = state => ({\n    spinner: getUiSpinner(state)\n})\n\nexport default connect(mapStateToProps, null)(NavBar);","import React from \"react\";\nimport { Backdrop, CircularProgress, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: 999999,\n    color: \"#fff\",\n  },\n}));\n\nconst BlockScreen = ({ isBlocked }) => {\n  const classes = useStyles();\n  return (\n    <Backdrop className={classes.backdrop} open={isBlocked}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n\nexport default BlockScreen;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(3)\n    }\n}));\n\nexport default ({ children }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            {children}\n        </div>\n    );\n}\n","\nimport './App.css';\nimport WeatherCard from './app/component/WeatherCard';\nimport NavBar from './app/component/NavBar';\nimport { connect } from 'react-redux';\nimport { getIsUiBlocked } from './app/selectors/ui'\nimport BlockScreen from './app/component/BlockScreen';\nimport MainBody from './app/component/MainBaody';\n\nconst App = ({ isBlocked }) => {\n  return (\n    <div>\n      <NavBar />\n      <MainBody>\n        <h1>Oh!</h1>\n        <WeatherCard />\n        <BlockScreen isBlocked={isBlocked} />\n      </MainBody>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isBlocked: getIsUiBlocked(state)\n});\n\nexport default connect(mapStateToProps)(App);\n\n","import { ADD_CITY, FETCH_CITIES, GET_WEATHER_CITY, DELETE_CITY } from \"../constants/actions\";\nimport { getWeatherCities } from \"../selectors/cities\";\n\nconst initialState = {\n    byId: [],\n    isFetching: false\n};\n\nconst cities = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FETCH_CITIES: {\n            const cities = action.payload;\n            return { ...state, byId: cities, isFetching: true }\n        }\n        default: { return state; }\n    }\n};\n\nexport default cities;","import { API, CHANGE_THEME, SPLIT_POPUP, UI } from '../constants/actions';\nimport { THEME } from '../constants/ui';\n\nconst initialState = {\n  requests: 0,\n  blocking: 0,\n  theme: THEME.LIGHT,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n\n    case API.DONE:\n      return { ...state, requests: state.requests - 1 };\n\n    case API.START:\n      return { ...state, requests: state.requests + 1 };\n      \n    case API.ERROR:\n      return { ...state, requests: state.requests - 1 };\n\n    case CHANGE_THEME:\n      const { theme } = action.payload;\n      return { ...state, theme };\n\n    case UI.BLOCK:\n      return { ...state, blocking: state.blocking + 1 };\n\n    case UI.UNBLOCK:\n      return { ...state, blocking: state.blocking - 1 };\n\n    default:\n      return state;\n  }\n  \n};\n\n","import { TOAST } from '../../app/constants/actions';\n\nlet _id = 0;\n\nconst initialState = {\n    messages: []\n};\n\nconst toastsReducer = (state = initialState, action = {}) => {\n\n    switch (action.type) {\n        case TOAST.CREATE:\n            return {\n                messages: [\n                    ...state.messages,\n                    { id: _id++, ...action.payload }\n                ]\n            };\n        case TOAST.DELETE:\n            const id = action.payload;\n            return {\n                messages: state.messages.filter(m => m.id !== id)\n            };\n        default:\n            return state;\n    }\n};\n\nexport default toastsReducer;","import { ADD_WEATHER, DELETE_WEATHER, GET_WEATHER, CLEAR_WEATHER } from \"../constants/actions\";\n\nconst initialState = {\n    byId: []\n};\n\nconst weather = (state = initialState, action) => {\n\n    switch (action.type) {\n        case GET_WEATHER.SUCCESS: {\n\n            const weather = action.payload;\n            weather.lastUpdatedTime = Date.now();\n            weather.cityId = action.meta.id;\n            weather.name = action.meta.name;\n\n            const newById = state.byId;\n            const index = state.byId.findIndex((e) => e.cityId === weather.cityId);\n\n            if (index === -1) {\n                newById.push(weather);\n            } else {\n                newById[index] = weather;\n            }\n\n            return {\n                ...state,\n                byId: newById\n            }\n        }\n        case ADD_WEATHER: {\n\n            const weather = {\n                lastUpdatedTime: Date.now(),\n                cityId: action.payload.id,\n                name: action.payload.name,\n            }\n            const newById = state.byId;\n            const index = state.byId.findIndex((e) => e.cityId === weather.cityId);\n\n            if (index === -1) {\n                newById.push(weather);\n            } else {\n                newById[index] = weather;\n            }\n\n            return {\n                ...state,\n                byId: newById\n            }\n        }\n        case DELETE_WEATHER: {\n            const weatherId = action.payload.cityId;\n            const weathers = state.byId.filter(weather => weather.cityId != weatherId);\n\n            return {\n                ...state,\n                byId: weathers\n            };\n        }\n        case CLEAR_WEATHER: {\n            return {\n                ...state,\n                byId: []\n            };\n        }\n        default: { return state; }\n    }\n};\n\nexport default weather;","import { GET_CURRENT_LOCATION } from \"../constants/actions\";\n\n\nconst initialState = {\n \n};\n\nconst current = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_CURRENT_LOCATION.SUCCESS: {\n            return action.payload;\n        }\n        default: { return state; }\n    }\n};\n\nexport default current;","import { combineReducers } from \"redux\";\nimport citiesReducer from \"./cities\";\nimport uiReducer from './ui';\nimport toastsReducer from './toast';\nimport weatherReducer from './weather';\nimport locationReducer from './location';\n\nconst rootReducer = combineReducers({\n    cities: citiesReducer,\n    weather: weatherReducer,\n    ui: uiReducer,\n    toast: toastsReducer,\n    location: locationReducer\n});\n\nexport default rootReducer;","import apiMdl from './core/api'\nimport multiMdl from './core/multi'\n\nconst err = () => (next) => (action) => {\n    try {\n        next(action);\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport default [\n    err,\n    multiMdl,\n    apiMdl\n];","const multiMdl = ({ dispatch }) => next => action => {\n    if (Array.isArray(action)) {\n        action.forEach(i => {\n            if (typeof (i) === \"function\")\n                dispatch(i());\n            else if (i?.type)\n                dispatch(i)\n        });\n    } else {\n        next(action);\n    }\n}\n\nexport default multiMdl;","\nimport { API_URL } from \"../../constants/api\";\nimport { API } from \"../../constants/actions\";\n\nconst apiMdl = ({ dispatch }) => next => action => {\n\n    next(action);\n\n    if (action.type === API.START) {\n\n        const { url, method, data, success, pending, error } = action.payload;\n        const meta = action.meta.api || {};\n\n        if (pending) {\n            const actions = [];\n            const pendingActions = Array.isArray(pending) ? pending : [pending];\n            pendingActions.forEach(pending => {\n                if (typeof pending === \"string\") {\n                    actions.push({\n                        type: pending,\n                    });\n                } else {\n                    actions.push(pending);\n                }\n            });\n\n            dispatch(actions);\n        }\n\n        const options = {\n            method,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        };\n\n        fetch(url, options)\n            .then(response => response.json())\n            .then(data => {\n                const actions = [\n                    { type: API.DONE, meta: { url } }\n                ];\n\n                const successActions = Array.isArray(success) ? success : [success];\n                successActions.forEach(success => {\n                    if (typeof success === \"string\") {\n                        actions.push({\n                            type: success,\n                            payload: data,\n                            meta: {\n                                ...meta,\n                                time: Date.now()\n                            }\n                        })\n                    } else {\n                        actions.push(success);\n                    }\n                });\n\n                dispatch(actions);\n            })\n            .catch(err => {\n                const actions = [{ type: API.ERROR, payload: JSON.stringify(err) }];\n                const errorActions = Array.isArray(error) ? error : [error];\n                errorActions.forEach(error => {\n                    if (typeof error === \"string\") {\n                        actions.push({ type: error });\n                    } else if (typeof error === \"object\") {\n                        actions.push(error);\n                    }\n                });\n\n                dispatch(actions);\n            });\n    }\n}\n\nexport default apiMdl;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducers from './reducers/root';\nimport middleware from './middleware';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(...middleware)));","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nconst themeGenerator = theme => createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n        type: theme,\r\n    },\r\n    overrides: {\r\n        MuiCssBaseline: {\r\n            \"@global\": {\r\n                p: {\r\n                    color: \"black\"\r\n                },\r\n                \".capitalize\": {\r\n                    textTransform: \"capitalize\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport default themeGenerator;\r\n","const getToastsSlice = state => state.toast;\n\nexport const getToastMessage = state => {\n    const msgs = getToastsSlice(state)?.messages == undefined ? [] : getToastsSlice(state)?.messages;\n    if (msgs.length) {\n        return msgs[0];\n    }\n    return null;\n};","import React, { useEffect, useState } from \"react\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { getToastMessage } from '../../../app/selectors/toast';\nimport { deleteToast } from '../../../app/actions/toast';\n\nconst Toaster = ({ message, deleteToast }) => {\n    const [isOpen, setIsOpen] = useState(true);\n    \n    const handleClose = () => {\n        setIsOpen(false);\n    };\n\n    useEffect(() => {\n            setIsOpen(true);\n    }, [message]);\n\n    return message &&\n        <Snackbar\n            key={message.id}\n            message={message.message}\n            open={isOpen}\n            onClose={handleClose}\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n            autoHideDuration={message.timeout}\n            onExited={() => deleteToast(message.id)}\n        />;\n}\n\nconst mapStateToProps = state => ({\n    message: getToastMessage(state)\n});\n\nconst mapDispatchToProps = {\n    deleteToast\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Toaster);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { connect, Provider } from 'react-redux';\nimport store from './app/store';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { getTheme } from './app/selectors/ui';\nimport themeGenerator from './theme';\nimport Toaster from './app/component/Toaster';\nimport { CssBaseline } from '@material-ui/core';\n\nconst mapStateToProps = state => ({ theme: getTheme(state) });\n\nconst ThemedApp = connect(mapStateToProps)(({ theme }) => {\n  const generatedTheme = themeGenerator(theme);\n  return (\n    <ThemeProvider theme={generatedTheme}>\n      <CssBaseline /> \n      <App />\n      <Toaster />\n    </ThemeProvider>\n  );\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemedApp />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}